version: "3.8"

x-node-base:
  # Pegged charon version (update this for each release).
  &node-base
  image: obolnetwork/charon:${CHARON_VERSION:-v0.14.0}
  restart: unless-stopped
  networks: [ cluster ]
  ports:
    - 3610:3610
    - 3640:3640
  volumes:
    - ./.charon:/opt/charon/.charon/

x-node-env:
  &node-env
  CHARON_BEACON_NODE_ENDPOINTS: ${CHARON_BEACON_NODE_ENDPOINTS:-http://lighthouse:5052}
  CHARON_LOG_LEVEL: ${CHARON_LOG_LEVEL:-info}
  CHARON_LOG_FORMAT: ${CHARON_LOG_FORMAT:-console}
  CHARON_P2P_EXTERNAL_HOSTNAME: ${CHARON_P2P_EXTERNAL_HOSTNAME:-} # Empty default required to avoid warnings.
  CHARON_P2P_RELAYS: ${CHARON_P2P_RELAYS:-http://relay:3640/enr}
  CHARON_P2P_TCP_ADDRESS: ${CHARON_P2P_TCP_ADDRESS:-0.0.0.0:3610}
  CHARON_VALIDATOR_API_ADDRESS: ${CHARON_VALIDATOR_API_ADDRESS:-0.0.0.0:3600}
  CHARON_MONITORING_ADDRESS: ${CHARON_MONITORING_ADDRESS:-0.0.0.0:3620}
  CHARON_JAEGER_ADDRESS: ${CHARON_JAEGER_ADDRESS-jaeger:6831} # Overriding to empty address allowed
  CHARON_BUILDER_API: ${CHARON_BUILDER_API:-true}
  CHARON_LOKI_ADDRESSES: ${CHARON_LOKI_ADDRESSES:-}

services:
  #             _   _                         _           _ 
  #  _ __   ___| |_| |__   ___ _ __ _ __ ___ (_)_ __   __| |
  # | '_ \ / _ \ __| '_ \ / _ \ '__| '_ ` _ \| | '_ \ / _` |
  # | | | |  __/ |_| | | |  __/ |  | | | | | | | | | | (_| |
  # |_| |_|\___|\__|_| |_|\___|_|  |_| |_| |_|_|_| |_|\__,_|
  nethermind:
    image: nethermind/nethermind:${NETHERMIND_VERSION:-1.17.1}
    restart: unless-stopped
    ports:
      - ${NETHERMIND_PORT_P2P:-30303}:30303/tcp # P2P TCP
      - ${NETHERMIND_PORT_P2P:-30303}:30303/udp # P2P UDP
      - ${NETHERMIND_PORT_HTTP:-8545}:8545 # JSON-RPC
      - ${NETHERMIND_PORT_ENGINE:-8551}:8551 # ENGINE-API
      - ${NETHERMIND_METRICS_PORT:-8645}:8645 # METRICS PORT
    command: |
      --config=${ETH2_NETWORK:-goerli}
      --datadir=data
      --HealthChecks.Enabled=true
      --JsonRpc.Enabled=true
      --JsonRpc.JwtSecretFile="/root/jwt/jwt.hex"
      --JsonRpc.EngineHost=0.0.0.0
      --JsonRpc.EnginePort=8551
      --JsonRpc.Host=0.0.0.0
      --JsonRpc.Port=8545
      --Metrics.Enabled=true
      --Metrics.ExposePort=8645
      --Sync.SnapSync=true 
      --Sync.AncientBodiesBarrier=4367322
      --Sync.AncientReceiptsBarrier=4367322
    networks: [ cluster ]
    volumes:
      - ./data/nethermind:/nethermind/data
      - ./jwt:/root/jwt

  #  _ _       _     _   _
  # | (_) __ _| |__ | |_| |__   ___  _   _ ___  ___
  # | | |/ _` | '_ \| __| '_ \ / _ \| | | / __|/ _ \
  # | | | (_| | | | | |_| | | | (_) | |_| \__ \  __/
  # |_|_|\__, |_| |_|\__|_| |_|\___/ \__,_|___/\___|
  #      |___/

  lighthouse:
    image: sigp/lighthouse:${LIGHTHOUSE_VERSION:-v3.5.1}
    ports:
      - ${LIGHTHOUSE_PORT_P2P:-9000}:9000/tcp # P2P TCP
      - ${LIGHTHOUSE_PORT_P2P:-9000}:9000/udp # P2P UDP
      - ${LIGHTHOUSE_PORT_HTTP:-5052}:5052    # HTTP API
      - ${LIGHTHOUSE_PORT_METRICS:-5054}:5054 # Metrics
    command: |
      lighthouse bn
      --network=${ETH2_NETWORK:-goerli}
      --checkpoint-sync-url=https://goerli.checkpoint-sync.ethdevops.io
      --execution-endpoint=http://nethermind:8551
      --execution-jwt=/opt/jwt/jwt.hex
      --datadir=/opt/app/beacon/
      --debug-level=info
      --http
      --http-address=0.0.0.0
      --http-port=5052
      --metrics
      --metrics-address=0.0.0.0
      --metrics-port=5054
      --metrics-allow-origin="*"
    networks: [ cluster ]
    volumes:
      - ./data/lighthouse:/opt/app/beacon
      - ./jwt:/opt/jwt
    restart: unless-stopped

#   _
#  | |_  ___  _  _  _   _
#  |  _|/ _ \| |/ /| | | |
#  | |_   __/|   { | |_| |
#   \__|\___||_|\_\ \__,_|
#

  teku:
    image: consensys/teku:23.2.0
    restart: unless-stopped
    init: true
    networks: [ cluster ]
    environment:
      JAVA_OPTS: "-Xmx6g -Xms6g"
    ports:
      - ${TEKU_PORT_P2P:-9000}:9000/tcp # P2P TCP
      - ${TEKU_PORT_P2P:-9000}:9000/udp # P2P UDP
      - ${TEKU_PORT_HTTP:-5051}:5051    # HTTP API
      - ${TEKU_PORT_METRICS:-8008}:8008 # Metrics
    command: >-
      --network=${ETH2_NETWORK:-goerli}
      --initial-state=https://goerli.checkpoint-sync.ethdevops.io
      --ee-endpoint=http://nethermind:8551
      --ee-jwt-secret-file=/opt/jwt/jwt.hex
      --Xbeacon-liveness-tracking-enabled=true
      --log-destination=console
      --data-base-path=/data/teku
      --rest-api-enabled=true
      --rest-api-host-allowlist="*"
      --rest-api-interface="0.0.0.0"
      --metrics-enabled=true
      --metrics-host-allowlist="*"
      --metrics-interface="0.0.0.0"
      --metrics-port="8008"
      --validators-graffiti="Obol Distributed Validator"
      --Xrest-api-validator-threads=${TEKU_BN_THREADS:-1100}
      --validators-proposer-blinded-blocks-enabled=true
      --validators-proposer-default-fee-recipient=${FEE_RECIPIENT}

    volumes:
      - ./data/teku:/data/teku
      - ./jwt:/opt/jwt/



  #          _           _               
  #  _ __ (_)_ __ ___ | |__  _   _ ___ 
  # | '_ \| | '_ ` _ \| '_ \| | | / __|
  # | | | | | | | | | | |_) | |_| \__ \
  # |_| |_|_|_| |_| |_|_.__/ \__,_|___/
  nimbus-checkpoint-sync:
    image: statusim/nimbus-eth2:${NIMBUS_VERSION:-multiarch-v22.9.1}
    command: trustedNodeSync --network=goerli --data-dir=/opt/data/ --trusted-node-url=https://goerli.checkpoint-sync.ethpandaops.io
    networks: [ cluster ]
    volumes:
      - ./data/nimbus:/opt/data/

  nimbus:
    image: statusim/nimbus-eth2:${NIMBUS_VERSION:-multiarch-v22.9.1}
    ports:
      - ${NIMBUS_PORT_P2P:-9000}:9000/tcp # P2P TCP
      - ${NIMBUS_PORT_P2P:-9000}:9000/udp # P2P UDP
      - ${NIMBUS_PORT_HTTP:-5052}:5052/tcp
      - ${NIMBUS_PORT_METRICS:-8009}:8008/tcp # Metrics port
    restart: on-failure
    command: |
      --network=${ETH2_NETWORK:-goerli}
      --data-dir=/opt/data/
      --web3-url=http://nethermind:8551
      --log-level=info
      --tcp-port=9000
      --udp-port=9000
      --jwt-secret=/opt/jwt/jwt.hex
      --rest
      --rest-address=0.0.0.0
      --rest-port=5052
      --metrics
      --metrics-address=0.0.0.0
      --metrics-port=8008
      --payload-builder=true
      --payload-builder-url=${NIMBUS_PAYLOAD_BUILDER_URL:-https://0xafa4c6985aa049fb79dd37010438cfebeb0f2bd42b115b89dd678dab0670c1de38da0c4e9138c9290a398ecd9a0b3110@builder-relay-goerli.flashbots.net}
    depends_on: [nethermind]
    networks: [ cluster ]
    volumes:
      - ./data/nimbus:/opt/data/
      - ./jwt:/opt/jwt/



  #       _                                  _ _            _
  #   ___| |__   __ _ _ __ ___  _ __     ___| (_) ___ _ __ | |_ ___
  #  / __| '_ \ / _` | '__/ _ \| '_ \   / __| | |/ _ \ '_ \| __/ __|
  # | (__| | | | (_| | | | (_) | | | | | (__| | |  __/ | | | |_\__ \
  #  \___|_| |_|\__,_|_|  \___/|_| |_|  \___|_|_|\___|_| |_|\__|___/

  # At each operator machine we run only one Charon node together with one of the two validators configured
  node:
    <<: *node-base
    ports:
      - 3620:3620 # Monitoring
    environment:
      <<: *node-env
      CHARON_PRIVATE_KEY_FILE: /opt/charon/.charon/charon-enr-private-key
      CHARON_LOCK_FILE: /opt/charon/.charon/cluster-lock.json
      CHARON_JAEGER_SERVICE: node

  relay:
    <<: *node-base
    ports:
      - 3620:3620 # Monitoring
    command: relay
    depends_on: []
    environment:
      <<: *node-env
      CHARON_HTTP_ADDRESS: 0.0.0.0:3640
      CHARON_DATA_DIR: /opt/charon/relay
      CHARON_P2P_RELAYS: ""
    volumes:
      - ./relay:/opt/charon/relay:rw

  #             _ _     _       _
  # __   ____ _| (_) __| | __ _| |_ ___  _ __ ___
  # \ \ / / _` | | |/ _` |/ _` | __/ _ \| '__/ __|
  #  \ V / (_| | | | (_| | (_| | || (_) | |  \__ \
  #   \_/ \__,_|_|_|\__,_|\__,_|\__\___/|_|  |___/
  vc-lighthouse:
    image: sigp/lighthouse:${LIGHTHOUSE_VERSION:-v3.4.0}
    entrypoint: /opt/lighthouse/run.sh
    networks: [ cluster ]
    ports:
      - 5064:5064 # Monitoring
    depends_on: [ node ]
    restart: unless-stopped
    environment:
      LIGHTHOUSE_BEACON_NODE_ADDRESS: http://node:3600
      ETH2_NETWORK: ${ETH2_NETWORK:-goerli}
      FEE_RECIPIENT: ${FEE_RECIPIENT}
      GRAFFITI: ${GRAFFITI}
    volumes:
      - ./data/lighthouse:/opt/app/
      - ./lighthouse/run.sh:/opt/lighthouse/run.sh
      - .charon/validator_keys:/opt/charon/keys

  vc-teku:
    image: consensys/teku:${TEKU_VERSION:-23.2.0}
    networks: [ cluster ]
    ports:
      - 8010:8008 # Monitoring
    depends_on: [ node ]
    restart: unless-stopped
    command: |
      validator-client
      --beacon-node-api-endpoint="http://node:3600"
      --Xvalidator-client-executor-threads=${TEKU_VC_THREADS:-1100}
      --validators-proposer-default-fee-recipient=${FEE_RECIPIENT}
      --validators-graffiti=${GRAFFITI}
      --data-base-path=/data/teku
      --config-file "/opt/charon/teku/teku-config.yaml"
    volumes:
      - .charon/validator_keys:/opt/charon/validator_keys
      - ./teku:/opt/charon/teku
      - ./data/teku:/data/teku


  #                        _ _             _
  #  _ __ ___   ___  _ __ (_) |_ ___  _ __(_)_ __   __ _
  # | '_ ` _ \ / _ \| '_ \| | __/ _ \| '__| | '_ \ / _` |
  # | | | | | | (_) | | | | | || (_) | |  | | | | | (_| |
  # |_| |_| |_|\___/|_| |_|_|\__\___/|_|  |_|_| |_|\__, |
  #                                                |___/
  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-v2.41.0}
    networks: [ cluster ]
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus/data # Adjust folder permissions
    command: |
      --storage.tsdb.retention.time=1y
      --config.file=/etc/prometheus/prometheus.yml
    extra_hosts:
      - "host.docker.internal: 172.23.5.254"

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-9.3.2}
    ports:
      - "3000:3000"
    networks: [ cluster ]
    depends_on: [ prometheus ]
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/datasource.yml
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/dashboards:/etc/dashboards

  node-exporter:
    image: prom/node-exporter:${NODE_EXPORTER_VERSION:-v1.5.0}
    ports:
      - 9100:9100
    command:
      - '--path.rootfs=/host'
    networks: [ cluster ]
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  jaeger:
    image: jaegertracing/all-in-one:${JAEGAR_VERSION:-1.41.0}
    networks: [ cluster ]
    ports:
      - "16686:16686"

networks:
  cluster:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.23.0.0/16
          ip_range: 172.23.5.0/24
          gateway: 172.23.5.254